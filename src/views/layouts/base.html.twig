<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Vulnerable Shop{% endblock %}</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script>
    (function() {
        const protectedRoutes = ['/admin', '/profile'];
        const currentPath = window.location.pathname;
        
        if (protectedRoutes.some(route => currentPath.startsWith(route))) {
            const token = localStorage.getItem('token');
            if (!token) {
                window.location.href = '/login';
            } else {
                $.ajaxSetup({
                    beforeSend: function(xhr) {
                        xhr.setRequestHeader('Authorization', 'Bearer ' + token);
                    }
                });
            }
        }
    })();
    </script>
</head>
<body class="bg-gray-100">
    <!-- Notification Component -->
    <div id="notification" class="fixed top-4 right-4 z-50 transform transition-all duration-300 translate-x-full">
        <div class="rounded-lg shadow-lg p-4 mb-4 min-w-[300px]">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <i id="notificationIcon" class="fas fa-check-circle text-2xl"></i>
                </div>
                <div class="ml-3 w-0 flex-1">
                    <p id="notificationMessage" class="text-sm font-medium"></p>
                </div>
                <div class="ml-4 flex-shrink-0 flex">
                    <button onclick="hideNotification()" class="inline-flex text-gray-400 hover:text-gray-500">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Navigation -->
    <nav class="bg-white shadow-lg">
        <div class="max-w-6xl mx-auto px-4">
            <div class="flex justify-between">
                <div class="flex space-x-7">
                    <div>
                        <a href="/home" class="flex items-center py-4 px-2">
                            <span class="font-semibold text-gray-500 text-lg">Vulnerable Shop</span>
                        </a>
                    </div>
                    <div class="hidden md:flex items-center space-x-1">
                        <a href="/products" class="py-4 px-2 text-gray-500 hover:text-green-500 transition duration-300">Products</a>
                        <span id="adminLink" class="hidden">
                            <a href="/admin" class="py-4 px-2 text-gray-500 hover:text-green-500 transition duration-300">Admin</a>
                        </span>
                    </div>
                </div>
                <div class="hidden md:flex items-center space-x-3">
                    <!-- Logged out state -->
                    <div id="loggedOutNav">
                        <a href="/login" class="py-2 px-2 font-medium text-gray-500 rounded hover:bg-green-500 hover:text-white transition duration-300">Login</a>
                        <a href="/register" class="py-2 px-2 font-medium text-white bg-green-500 rounded hover:bg-green-400 transition duration-300">Register</a>
                    </div>
                    <!-- Logged in state -->
                    <div id="loggedInNav" class="hidden flex items-center space-x-4">
                        <span class="py-2 px-2 text-gray-500">Balance: $<span id="userBalance">0.00</span></span>
                        <div class="relative">
                            <button id="userMenuBtn" class="flex items-center space-x-2 text-gray-500 hover:text-green-500 focus:outline-none">
                                <span id="userUsername" class="font-medium"></span>
                                <i class="fas fa-chevron-down text-sm"></i>
                            </button>
                            <div id="userMenu" class="hidden absolute right-0 mt-2 py-2 w-48 bg-white rounded-md shadow-xl z-20">
                                <a href="/profile" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                    <i class="fas fa-user mr-2"></i>Profile
                                </a>
                                <a href="#" onclick="logout()" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                    <i class="fas fa-sign-out-alt mr-2"></i>Logout
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <!-- Content -->
    <div class="container mx-auto px-4 py-8">
        {% block content %}{% endblock %}
    </div>

    <!-- Footer -->
    <footer class="bg-white shadow-lg mt-8">
        <div class="max-w-6xl mx-auto px-4 py-4">
            <div class="text-center text-gray-500">
                <p>Contact Admin (ID: <span id="adminId">Loading...</span>) If you have any questions</p>
            </div>
        </div>
    </footer>

    <script>
    function showNotification(message, type = 'success') {
        const notification = $('#notification');
        const icon = $('#notificationIcon');
        const messageEl = $('#notificationMessage');
        
        if (type === 'success') {
            notification.removeClass('bg-red-100').addClass('bg-green-100');
            icon.removeClass('text-red-500').addClass('text-green-500 fa-check-circle');
        } else {
            notification.removeClass('bg-green-100').addClass('bg-red-100');
            icon.removeClass('text-green-500').addClass('text-red-500 fa-exclamation-circle');
        }
        
        messageEl.text(message);
        notification.removeClass('translate-x-full').addClass('translate-x-0');
        
        setTimeout(hideNotification, 3000);
    }

    function hideNotification() {
        const notification = $('#notification');
        notification.removeClass('translate-x-0').addClass('translate-x-full');
    }

    function updateAuthState() {
        const token = localStorage.getItem('token');
        if (token) {
            fetch('/api/user-info', {
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    localStorage.removeItem('token');
                    updateAuthState();
                    return;
                }
                
                $('#loggedOutNav').addClass('hidden');
                $('#loggedInNav').removeClass('hidden');
                $('#userUsername').text(data.username);
                $('#userBalance').text(data.balance.toFixed(2));
                
                if (data.role === 'admin') {
                    $('#adminLink').removeClass('hidden');
                }
            })
            .catch(e => {
                console.log(e);
                localStorage.removeItem('token');
                updateAuthState();

            });
        } else {
            $('#loggedInNav').addClass('hidden');
            $('#loggedOutNav').removeClass('hidden');
            $('#adminLink').addClass('hidden');
        }
    }

    function logout() {
        localStorage.removeItem('token');
        showNotification('Logged out successfully!', 'success');
        setTimeout(function() {
            window.location.href = '/login';
        }, 1000);
    }

    $('#userMenuBtn').click(function(e) {
        e.stopPropagation();
        $('#userMenu').toggleClass('hidden');
    });

    $(document).click(function() {
        $('#userMenu').addClass('hidden');
    });

    $.ajaxSetup({
        beforeSend: function(xhr) {
            const token = localStorage.getItem('token');
            if (token) {
                xhr.setRequestHeader('Authorization', 'Bearer ' + token);
            }
        }
    });

    $(document).ready(function() {
        updateAuthState();
        
        window.addEventListener('balance-update', function() {
            fetch('/api/user-info', {
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('token')}`
                }
            })
            .then(response => response.json())
            .then(data => {
                if (!data.error && data.balance !== undefined) {
                    $('#userBalance').text(data.balance.toFixed(2));
                }
            });
        });

        setInterval(function() {
            window.dispatchEvent(new Event('balance-update'));
        }, 30000);
    });

    fetch('/api/admin-info')
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                document.getElementById('adminId').textContent = data.admin_id;
            } else {
                document.getElementById('adminId').textContent = 'Not found';
            }
        })
        .catch(error => {
            document.getElementById('adminId').textContent = 'Error';
        });
    </script>
    {% block scripts %}{% endblock %}
</body>
</html> 