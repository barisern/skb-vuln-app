{% extends "layouts/base.html.twig" %}

{% block title %}Products - Vulnerable Shop{% endblock %}

{% block content %}
<div class="container mx-auto px-4">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-3xl font-bold text-gray-800">Products</h1>
        <div class="flex space-x-4">
            <input type="text" id="searchQuery" placeholder="Search products..." 
                class="px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500">
            <button id="searchBtn" 
                class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition duration-300">
                Search
            </button>
        </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6" id="productsGrid">
        <!-- Product cards will be inserted here -->
    </div>

    <!-- Purchase Modal -->
    <div id="purchaseModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full">
        <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
            <div class="mt-3 text-center">
                <h3 class="text-lg leading-6 font-medium text-gray-900">Confirm Purchase</h3>
                <div class="mt-2 px-7 py-3">
                    <p class="text-sm text-gray-500">
                        Are you sure you want to purchase this product?
                    </p>
                    <p class="mt-1 text-lg font-bold text-gray-700" id="modalProductName"></p>
                    <p class="text-xl font-bold text-green-500" id="modalProductPrice"></p>
                </div>
                <div class="items-center px-4 py-3">
                    <button id="confirmPurchase"
                        class="px-4 py-2 bg-green-500 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-300">
                        Confirm Purchase
                    </button>
                    <button id="cancelPurchase"
                        class="mt-3 px-4 py-2 bg-gray-100 text-gray-700 text-base font-medium rounded-md w-full shadow-sm hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-300">
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
let currentProductId = null;

function loadProducts(query = {}) {
    $.ajax({
        url: '/api/products',
        method: 'GET',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('token')
        },
        data: { query: JSON.stringify(query) },
        success: function(response) {
            const grid = $('#productsGrid');
            grid.empty();
            
            const products = response.products || [];
            
            if (products.length === 0) {
                grid.html('<div class="col-span-full text-center py-8"><p class="text-gray-600">No products found.</p></div>');
                return;
            }
            
            products.forEach(product => {
                const card = `
                    <div class="bg-white rounded-lg shadow-md overflow-hidden">
                        <div class="p-4">
                            <div class="flex justify-between items-start">
                                <h3 class="text-xl font-semibold text-gray-800">${product.name}</h3>
                                ${product.stock <= 0 ? 
                                    '<span class="px-2 py-1 bg-red-100 text-red-800 text-xs font-semibold rounded">Out of Stock</span>' 
                                    : ''}
                            </div>
                            <p class="text-gray-600 mt-2">${product.description}</p>
                            <div class="mt-4 flex items-center justify-between">
                                <div>
                                    <span class="text-2xl font-bold text-green-500">$${product.price}</span>
                                    ${product.stock > 0 ? 
                                        `<span class="ml-2 text-sm text-gray-600">(${product.stock} in stock)</span>`
                                        : ''}
                                </div>
                                <button class="purchase-btn bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition duration-300 disabled:opacity-50 disabled:cursor-not-allowed"
                                    data-id="${product._id.toString()}"
                                    data-name="${product.name}"
                                    data-price="${product.price}"
                                    ${product.stock <= 0 ? 'disabled' : ''}>
                                    ${product.stock <= 0 ? 'Out of Stock' : 'Buy Now'}
                                </button>
                            </div>
                        </div>
                    </div>
                `;
                grid.append(card);
            });
        },
        error: function() {
            const grid = $('#productsGrid');
            grid.html('<div class="col-span-full text-center py-8"><p class="text-red-600">Error loading products.</p></div>');
        }
    });
}

$(document).ready(function() {
    loadProducts();
    
    $('#searchBtn').click(function() {
        const query = $('#searchQuery').val();
        loadProducts({ $text: { $search: query } });
    });

    window.addEventListener('purchase-success', function() {
        loadProducts();
        window.dispatchEvent(new Event('balance-update'));
    });
    
    $(document).on('click', '.purchase-btn', function() {
        const button = $(this);
        currentProductId = button.data('id');
        $('#modalProductName').text(button.data('name'));
        $('#modalProductPrice').text('$' + button.data('price'));
        $('#purchaseModal').removeClass('hidden');
    });
    
    $('#confirmPurchase').click(function() {
        const button = $(this);
        button.prop('disabled', true);
        
        $.ajax({
            url: '/api/purchase',
            method: 'POST',
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('token'),
                'Content-Type': 'application/json'
            },
            data: JSON.stringify({
                product_id: currentProductId
            }),
            success: function(response) {
                if (response.success) {
                    showNotification('Purchase successful!', 'success');
                    $('#purchaseModal').addClass('hidden');
                    window.dispatchEvent(new Event('purchase-success'));
                } else {
                    showNotification(response.error || 'Purchase failed', 'error');
                }
            },
            error: function(xhr) {
                showNotification(xhr.responseJSON?.error || 'Purchase failed', 'error');
            },
            complete: function() {
                button.prop('disabled', false);
            }
        });
    });
    
    $('#cancelPurchase').click(function() {
        $('#purchaseModal').addClass('hidden');
    });
});
</script>
{% endblock %} 